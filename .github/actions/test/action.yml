name: "Test"
description: "Run end-to-end tests. Note that this action assumes that Node and Next.js have already been properly setup. See the setup-next task for details."

runs:
  using: "composite"
  steps:
    # Get the yarn cache path.
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    - name: Restore yarn cache
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
        restore-keys: "yarn-cache-folder-"
    # Actually install packages with Yarn
    - name: Install packages
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install
      shell: bash
      env:
        YARN_CHECKSUM_BEHAVIOR: "update"
    - run: mv macOS-replay-playwright/macOS-replay-playwright.tar.xz ./
      shell: bash
    - run: tar xf ./macOS-replay-playwright.tar.xz
      shell: bash
    - run: chmod +x ./firefox/Nightly.app/Contents/MacOS/firefox
      shell: bash
    - run: chmod +x ./replay-node/macOS-replay-node
      shell: bash
    - run: yarn test-e2e --shard ${{ env.INPUT_STRIPE }}
      shell: bash
      env:
        RECORD_REPLAY_API_KEY: rwk_yaEG8jo6gcisGHHoMj8SNoOMIHSbT7REuU5E1QnKCiL
        RECORD_REPLAY_DRIVER: replay-driver/macOS-recordreplay.so
        RECORD_REPLAY_NODE: replay-node/macOS-replay-node
        RECORD_REPLAY_PATH: firefox/Nightly.app/Contents/MacOS/firefox
        RECORD_REPLAY_PLAYWRIGHT_HEADLESS: true
        RECORD_REPLAY_VERBOSE: 1
        SHOULD_RECORD_EXAMPLES: true
    - uses: replayio/action-upload@main
      if: always()
      with:
        apiKey: rwk_yaEG8jo6gcisGHHoMj8SNoOMIHSbT7REuU5E1QnKCiL
        public: true
        filter: function($v) { $v.metadata.test and $v.status = "onDisk" }
