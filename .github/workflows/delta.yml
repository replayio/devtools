name: "Delta"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Force terminal colors. @see https://www.npmjs.com/package/colors
  FORCE_COLOR: 1
  FLAKINESS_CONNECTION_STRING: ${{ secrets.FLAKINESS_CONNECTION_STRING }}
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  RECORD_REPLAY_METADATA_TEST_RUN_TITLE: Snapshot Tests

jobs:
  generate-test-run-id:
    name: Generate Test Run ID
    runs-on: ubuntu-latest
    steps:
      - run: yarn add uuid
        shell: sh
      - uses: actions/github-script@v6
        id: uuid
        with:
          result-encoding: string
          script: return require("uuid").v4()
    outputs:
      testRunId: ${{ steps.uuid.outputs.result }}
  run_tests:
    name: "Run tests"
    runs-on: ubuntu-latest
    needs: [generate-test-run-id]
    strategy:
      fail-fast: false
      matrix:
        # Playwright shards using test files (a file will never be split into more than one shard)
        # Using more shards than we have test files means some will end up with 0 tests (and will fail)
        shard: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Print job info
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          node --version
      - name: Check out repository code
        uses: actions/checkout@v4
      # Get the yarn cache path.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "{dir}={$(yarn config get cacheFolder)}" >> $GITHUB_OUTPUT
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: yarn-cache-folder-${{ hashFiles('**/package-lock.json') }}
          restore-keys: "yarn-cache-folder-"
      # Actually install packages with Yarn
      - name: Install packages
        run: yarn install
        shell: bash
        working-directory: packages/replay-next
      - name: Install Playwright packages
        run: yarn install
        shell: bash
        working-directory: packages/replay-next/playwright
      - name: Install Replay Browser
        run: npx @replayio/playwright install
        shell: bash
        working-directory: packages/replay-next/playwright
      - name: Run dev server
        run: yarn dev &
        working-directory: packages/replay-next
      - name: Wait until server is up
        run: npx wait-on --timeout=60000 http-get://localhost:3000
      - name: Run playwright tests
        run: yarn test:ci --reporter @replayio/playwright/reporter,line
        working-directory: packages/replay-next/playwright
        env:
          SHARD: ${{ matrix.shard }}
          SHARDS: 10
          REPLAY_PLAYWRIGHT_FIXTURE: 1
          RECORD_REPLAY_API_KEY: rwk_4mEiT150uOHyLQiQvZfPZiNjmBe4NrOXOm9yG9nS794
          RECORD_REPLAY_METADATA_TEST_RUN_ID: ${{ needs.generate-test-run-id.outputs.testRunId }}
      - name: Upload Replay recordings
        if: always()
        uses: replayio/action-upload@v0.5.1
        with:
          api-key: rwk_4mEiT150uOHyLQiQvZfPZiNjmBe4NrOXOm9yG9nS794
          filter: ${{ 'function() { true }' }}
          public: true
      - name: Upload snapshot images and metadata
        if: always()
        run: ./uploadSnapshots.js
        working-directory: packages/replay-next
