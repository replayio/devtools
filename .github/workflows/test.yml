name: Run test suites
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  download-browser:
    name: Download Replay browser
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-replay-playwright.tar.xz
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: macOS-replay-playwright
          path: macOS-replay-playwright.tar.xz
  download-node:
    name: Download node
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-replay-node
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: replay-node
          path: macOS-replay-node
  download-driver:
    name: Download recording driver
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-recordreplay.so
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: replay-driver
          path: macOS-recordreplay.so
  preview-branch:
    name: Wait for Vercel Preview Branch
    runs-on: ubuntu-latest
    steps:
      - name: Waiting for 200 from the Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
        id: waitFor200
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 960
          check_interval: 60
          environment: ${{ fromJSON('["", "production"]')[github.ref == 'refs/heads/main'] }}
    outputs:
      url: ${{ steps.waitFor200.outputs.url }}
  generate-test-run-id:
    name: Generate Test Run ID
    runs-on: ubuntu-latest
    steps:
      - run: yarn add uuid
        shell: sh
      - uses: actions/github-script@v6
        id: uuid
        with:
          result-encoding: string
          script: return require("uuid").v4()
    outputs:
      testRunId: ${{ steps.uuid.outputs.result }}
  e2etest:
    name: End-to-end tests (${{ matrix.shard }})
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch, generate-test-run-id]
    strategy:
      # GH cancels other matrixed jobs by default if one fails. We want all E2E jobs to complete.
      fail-fast: false
      matrix:
        shard: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          TEST_RUN_ID: ${{ needs.generate-test-run-id.outputs.testRunId }}
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: ${{ matrix.shard }}/10
  mock-test:
    name: Mock Tests
    runs-on: macos-latest
    timeout-minutes: 15
    needs: [download-browser, preview-branch]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/mockTest
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          RECORD_REPLAY_PATH: ./firefox/Nightly.app/Contents/MacOS/firefox
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      # Get the yarn cache path.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: "yarn-cache-folder-"
      # Actually install packages with Yarn
      - name: Install packages
        run: yarn install
        env:
          YARN_CHECKSUM_BEHAVIOR: "update"
      - name: Run tests
        run: yarn test
