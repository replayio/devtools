name: Run test suites
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  download-browser:
    name: Download Replay browser
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-replay-playwright.tar.xz
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: macOS-replay-playwright
          path: macOS-replay-playwright.tar.xz
  download-node:
    name: Download node
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-replay-node
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: replay-node
          path: macOS-replay-node
  download-driver:
    name: Download recording driver
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Download
        run: wget https://static.replay.io/downloads/macOS-recordreplay.so
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: replay-driver
          path: macOS-recordreplay.so
  preview-branch:
    name: Vercel Preview Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        id: vercel-deploy
        with:
          # for posting a comment upon completion
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: "redacted"
          vercel-org-id: "redacted"
          vercel-project-id: "redacted"
          # an additiona; param for prod deployments
          vercel-args: ${{ fromJSON('["", "--prod"]')[github.ref == 'refs/heads/master'] }}
          # vercel-project-name required for the right scope
          # see https://github.com/amondnet/vercel-action/issues/4
          vercel-project-name: devtools
    outputs:
      url: ${{ steps.vercel-deploy.outputs.preview-url }}
  test0:
    name: End-to-end tests (1)
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: 1/5
  test1:
    name: End-to-end tests (2)
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: 2/5
  test2:
    name: End-to-end tests (3)
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: 3/5
  test3:
    name: End-to-end tests (4)
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: 4/5
  test4:
    name: End-to-end tests (5)
    runs-on: macos-latest
    needs: [download-browser, download-node, download-driver, preview-branch]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          INPUT_STRIPE: 5/5
  mock-test:
    name: Mock Tests
    runs-on: macos-latest
    timeout-minutes: 15
    needs: [download-browser, preview-branch]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ./.github/actions/mockTest
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview-branch.outputs.url }}
          RECORD_REPLAY_PATH: ./firefox/Nightly.app/Contents/MacOS/firefox
          DEBUG: pw:browser*
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
      - name: Install dependencies
        run: npm install
        shell: bash
      - name: Run tests
        run: npm test
